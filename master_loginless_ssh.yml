---
- hosts: hadoop_master
  vars:
    key_basedir: "/tmp/ansible/id_rsa_copy"
  tasks:
    - name: create .ssh
      file: path={{ ansible_env.HOME }}/.ssh state=directory

    - name: create .ssh/config
      file:
        path: "{{ ansible_env.HOME }}/.ssh/config"
        state: file
        mode: "u=rw,g=r,o=r"

    - name: create ssh key in master
      shell: ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa creates=~/.ssh/id_rsa

    - name: disable ssh host key checking
      blockinfile:
        path: "{{ ansible_env.HOME }}/.ssh/config"
        block: |
          Host *
              StrictHostKeyChecking no

    - name: create local key_basedir
      local_action:
        module: file
        path: "{{ key_basedir }}"
        state: absent
      local_action:
        module: file
        path: "{{ key_basedir }}"
        state: directory
      run_once: yes

    - fetch:
        src: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"
        dest: "{{ key_basedir }}"


- hosts: hadoop_slave
  vars:
    key_basedir: "/tmp/ansible/id_rsa_copy"
  tasks:
    - name: create .ssh on slave
      file: path={{ ansible_env.HOME }}/.ssh state=directory

    - name: create authorized_keys on slave if not exists
      file: path={{ ansible_env.HOME }}/.ssh/authorized_keys state=file

    - local_action: shell cat {{ key_basedir }}/**/*.pub
      register: pub_keys
      changed_when: False
      
    - debug: var=pub_keys
        
    - local_action:
        module: file
        path: "{{ key_basedir }}"
        mode: absent

    - name: copy public key of master to authorized_keys of slaves
      blockinfile:
        block: "{{ pub_keys.stdout }}"
        path: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"

